{"version":3,"sources":["components/Navigation/Navigation.js","routes/Home/Home.js","api/path.js","routes/Auth/Login.js","routes/Auth/Signup.js","routes/Profile/Profile.js","routes/Booking/Booking.js","App.js","index.js"],"names":["Navigation","state","logOut","history","useHistory","className","to","isLogged","user","firstname","onClick","push","Home","type","path","Login","handleLoginSubmit","useForm","register","errors","handleSubmit","onSubmit","formData","axios","post","serverPath","login","logLogin","password","logPassword","then","res","data","catch","error","window","alert","console","log","logIn","htmlFor","id","name","placeholder","ref","required","Signup","watch","errorMessage","errMessage","lastname","id_type","idType","id_number","idNumber","address","mobile_phone","mobilePhone","home_phone","homePhone","category","minLength","validate","letters","value","test","digits","confirmPassword","repeatPassword","Profile","Booking","App","setState","basename","this","exact","logout","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f70f22ad.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport {Link, useHistory} from \"react-router-dom\";\n\nconst Navigation = ({state, logOut}) => {\n    const history = useHistory();\n\n    const log = () => {\n        if(!state.isLogged){\n            return (\n                <Fragment>\n                    <button onClick={()=>{history.push('/login')}}>Log in</button>\n                    <button onClick={()=>{history.push('/signup')}}>Sign up</button>\n                </Fragment>\n            );\n        } else {\n            return (\n                <Fragment>\n                    <p>{state.user.firstname}</p>\n                    <button onClick={()=>{\n                        logOut();\n                        history.push('/');\n                    }}>Log out</button>\n                </Fragment>\n            );\n        }\n    }\n\n    return (\n        <div>\n            <nav className=\"navigation\">\n                <ul>\n                    <li>\n                        <Link to=\"/\">Home</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/booking\">Booking</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/profile\">Profile</Link>\n                    </li>\n                </ul>\n            </nav>\n            {log()}\n        </div>\n    );\n}\n\nexport default Navigation;","import React from 'react';\nimport Navigation from '../../components/Navigation/Navigation';\n\nconst Home = ({state}) => {\n\n    return (\n        <main>\n            <h2>This is home page for {state.user.type}!</h2>\n            <p>{state.isLogged ? \"You are logged in.\" : \"Please, log in.\"}</p>\n        </main>\n    );\n}\n\nexport default Home;","const path = \"http://localhost:8080/backend_war_exploded\";\n\nexport default path;","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form'\nimport axios from 'axios';\n\nimport serverPath from '../../api/path';\n\nconst Login = ({handleLoginSubmit}) => {\n\n    const history = useHistory();\n    const { register, errors, handleSubmit } = useForm();\n\n    const logIn = formData => {\n        axios.post(`${serverPath}/services/auth/login`, {\n            login: formData.logLogin,\n            password: formData.logPassword,\n          })\n          .then(res => {\n            handleLoginSubmit({\n                user: res.data,\n                isLogged: true,\n            });\n          })\n          .catch((error)=>{\n            handleLoginSubmit({\n                user: {},\n                isLogged: false,\n            })\n            window.alert(\"Cannot access the server!\");\n            console.log(error);\n          });\n    }\n\n    const onSubmit = formData => {\n        logIn(formData);\n    }\n\n    const ret = (\n        <div className=\"auth\">\n            <div>\n                <h3>Log in</h3>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <div>\n                        <label htmlFor=\"log-login\">Login: </label>\n                        <input \n                            type=\"text\" \n                            id= \"logLogin\"\n                            name=\"logLogin\"\n                            placeholder=\"Enter login\"\n                            ref={register({required: true})}\n                        />\n                    </div>\n                    {errors.logLogin && <p className=\"validError\">This field is required!</p>}\n                    <div>\n                        <label htmlFor=\"log-password\">Password: </label>\n                        <input \n                            type=\"password\" \n                            id=\"logPassword\"\n                            name=\"logPassword\"\n                            placeholder=\"Enter password\"\n                            ref={register({required: true})}\n                        />\n                    </div>\n                    {errors.logPassword && <p className=\"validError\">This field is required!</p>}\n                    <button type=\"submit\">Log in</button>\n                    <p>Do not have an account?</p>\n                    <button onClick={()=>{history.push('/signup')}}>Sign up</button>\n                </form>\n            </div>\n        </div>\n    );\n\n    return ret;\n}\n\nexport default Login;","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form'\nimport axios from 'axios';\n\nimport serverPath from '../../api/path';\n\nconst Signup = () => {\n\n    const history = useHistory();\n    const { register, errors, watch, handleSubmit } = useForm();\n\n    const errorMessage = errMessage => {\n        return <p className=\"validError\">{errMessage}</p>\n    }\n\n    const onSubmit = formData => {\n        axios.post(`${serverPath}/services/auth/signup`, {\n            firstname: formData.firstname,\n            lastname: formData.lastname,\n            password: formData.password,\n            id_type: formData.idType,\n            id_number: formData.idNumber,\n            address: formData.address,\n            mobile_phone: formData.mobilePhone,\n            home_phone: formData.homePhone,\n            category: formData.category,\n          })\n          .then((res)=>{\n            window.alert(\"You are signed up successfully!\");\n            history.push('/login');\n          })\n          .catch((error)=>{\n            window.alert(\"Cannot access the server!\");\n            console.log(error);\n          });\n          \n    }\n\n    return (\n        <div>\n            <h3>Sign up</h3>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <div>\n                    <label htmlFor=\"firstname\">Firstname: </label>\n                    <input \n                        type=\"text\" \n                        id=\"firstname\" \n                        name=\"firstname\" \n                        ref={register({required: true})}\n                    />\n                </div>\n                {errors.firstname && errorMessage('Firstname is required!')}\n                <div>\n                    <label htmlFor=\"lastname\">Lastname: </label>\n                    <input \n                        type=\"text\" \n                        id=\"lastname\" \n                        name=\"lastname\"\n                        ref={register({required: true})}\n                    />\n                </div>\n                {errors.lastname && errorMessage('Lastname is required!')}\n                <div>\n                    <label htmlFor=\"password\">Password: </label>\n                    <input \n                        type=\"password\" \n                        id=\"password\" \n                        name=\"password\"\n                        ref={register({minLength: 6, validate: {\n                            letters: value => /[a-zA-Z]/.test(value),\n                            digits: value => /[0-9]/.test(value),\n                        }})}\n                    />\n                </div>\n                {errors.password && errors.password.type === \"minLength\" && errorMessage('Password should contain at least 6 characters!')}\n                {errors.password && errors.password.type === \"letters\" && errorMessage('Password should contain at least 1 english letter!')}\n                {errors.password && errors.password.type === \"digits\" && errorMessage('Password should contain at least 1 digit!')}\n                <div>\n                    <label htmlFor=\"repeat_password\">Repeat Password: </label>\n                    <input \n                        type=\"password\" \n                        id=\"repeatPassword\" \n                        name=\"repeatPassword\"\n                        ref={register({validate: {\n                            confirmPassword: value => value === watch('password'),\n                        }})}\n                    />\n                </div>\n                {errors.repeatPassword && errors.repeatPassword.type === \"confirmPassword\" && errorMessage('Passwords do not match!')}\n                <p></p>\n                <div>\n                    <label htmlFor=\"idType\" id=\"id_type\">ID type: </label>\n                    <select \n                        name=\"idType\"\n                        ref={register({required: true})}\n                    >\n                        <option value=\"\">Choose ID Type</option>\n                        <option value=\"us_passport\">US passport</option>\n                        <option value=\"driving_license\">Driving license</option>\n                    </select>\n                </div>\n                {errors.idType && errorMessage('Choose ID Type')}\n                <div>\n                    <label htmlFor=\"id_number\">ID Number: </label>\n                    <input \n                        type=\"text\" \n                        id=\"idNumber\" \n                        name=\"idNumber\"\n                        ref={register({required: true})}\n                    />\n                </div>\n                {errors.idNumber && errorMessage('ID Number is required!')}\n                <div>\n                    <label htmlFor=\"address\">Address: </label>\n                    <input \n                        type=\"text\" \n                        id=\"address\" \n                        name=\"address\"\n                        ref={register({required: true})}\n\n                    />\n                </div>\n                {errors.address && errorMessage('Address is required!')}\n                <div>\n                    <label htmlFor=\"mobile_phone\">Mobile phone: </label>\n                    <input \n                        type=\"tel\" \n                        id=\"mobilePhone\" \n                        name=\"mobilePhone\"\n                        ref={register({required: true})}\n                    />\n                </div>\n                {errors.mobilePhone && errorMessage('Mobile phone is required!')}\n                <div>\n                    <label htmlFor=\"home_phone\">Home phone: </label>\n                    <input \n                        type=\"tel\" \n                        id=\"homePhone\" \n                        name=\"homePhone\"\n                        ref={register({required: true})}\n                    />\n                </div>\n                {errors.homePhone && errorMessage('Home phone is required!')}\n                <div>\n                    <label htmlFor=\"category\">Category: </label>\n                    <div id=\"category\">\n                        <input \n                            type=\"radio\" \n                            id=\"cat_none\"\n                            value=\"\"\n                            ref={register}\n                            name=\"category\"\n                        />\n                        <label htmlFor=\"cat_none\">None</label>\n                        <input \n                            type=\"radio\" \n                            id=\"cat_military\"\n                            value=\"military\"\n                            ref={register}\n                            name=\"category\"\n                        />\n                        <label htmlFor=\"cat_military\">Military</label>\n                        <input \n                            type=\"radio\"\n                            id=\"cat_vip\"\n                            value=\"vip\"\n                            ref={register}\n                            name=\"category\"\n                        />\n                        <label htmlFor=\"cat_vip\">Vip</label>\n                    </div>\n                </div>\n                <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Signup;","import React from 'react';\n\nconst Profile = () => {\n\n    return (\n        <div>\n            <h3>This is Profile page!</h3>\n        </div>\n    );\n}\n\nexport default Profile;","import React from 'react';\n\nconst Booking = () => {\n\n    return (\n        <div>\n            <h3>This is Booking page!</h3>\n        </div>\n    );\n}\n\nexport default Booking;","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport axios from 'axios';\nimport Home from './routes/Home/Home';\nimport Login from './routes/Auth/Login';\nimport Signup from './routes/Auth/Signup';\nimport serverPath from './api/path';\nimport Navigation from './components/Navigation/Navigation';\nimport Profile from './routes/Profile/Profile';\nimport Booking from './routes/Booking/Booking';\n\nimport './App.css';\n\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      isLogged: false,\n      user: {\n        type: \"user\",\n      },\n    }\n  }\n\n  handleLoginSubmit = (data) => {\n    this.setState(data);\n  }\n\n  logOut = () => {\n    this.setState({\n      user: {},\n      isLogged: false,\n    });\n  }\n\n  render(){\n    return (\n      <Router basename=\"/backend_war_exploded\">\n        <div className=\"App\">\n          <Navigation state={this.state} logOut={this.logOut}/>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home state={this.state} login={this.login} logOut={this.logout}/>\n            </Route>\n            <Route exact path=\"/booking\">\n              <Booking />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route exact path=\"/login\">\n              <Login handleLoginSubmit={this.handleLoginSubmit}/>\n            </Route>\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n          </Switch>\n\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}