{"version":3,"sources":["components/Navigation/Navigation.js","routes/Home/Home.js","api/path.js","routes/Auth/Login.js","routes/Auth/Signup.js","routes/Profile/Profile.js","routes/Booking/Booking.js","App.js","index.js"],"names":["Navigation","state","logOut","history","useHistory","className","to","isLogged","user","firstname","onClick","push","Home","type","path","Login","handleLoginSubmit","useForm","register","handleSubmit","errors","onSubmit","formData","axios","post","serverPath","login","logLogin","password","logPassword","then","res","data","catch","error","window","alert","console","log","logIn","name","placeholder","required","ref","minLength","Signup","mode","watch","useState","validLogin","setValidLogin","errorMessage","errMessage","loginValue","document","getElementById","value","lastname","id_type","idType","id_number","idNumber","address","mobile_phone","mobilePhone","home_phone","homePhone","category","validate","letters","test","digits","confirmPassword","repeatPassword","onChange","target","id","htmlFor","Profile","Booking","App","setState","basename","this","exact","logout","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8a1b2098.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport {Link, useHistory} from \"react-router-dom\";\n\nconst Navigation = ({state, logOut}) => {\n    const history = useHistory();\n\n    const log = () => {\n        if(!state.isLogged){\n            return (\n                <div>\n                    <button className=\"navButton\" onClick={()=>{history.push('/login')}}>Log in</button>\n                    <button className=\"navButton\" onClick={()=>{history.push('/signup')}}>Sign up</button>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <p>{state.user.firstname}</p>\n                    <button onClick={()=>{\n                        logOut();\n                        history.push('/');\n                    }}>Log out</button>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <div>\n            <nav className=\"navigation\">\n                <ul>\n                    <li>\n                        <Link to=\"/\">Home</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/booking\">Booking</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/profile\">Profile</Link>\n                    </li>\n                </ul>\n                {log()}\n            </nav>\n        </div>\n    );\n}\n\nexport default Navigation;","import React from 'react';\nimport Navigation from '../../components/Navigation/Navigation';\n\nconst Home = ({state}) => {\n\n    return (\n        <main className=\"Home\">\n            <h2>This is home page for {state.user.type}!</h2>\n            <p>{state.isLogged ? \"You are logged in.\" : \"Please, log in.\"}</p>\n        </main>\n    );\n}\n\nexport default Home;","const path = \"http://localhost:8080/backend_war_exploded\";\n\nexport default path;","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form'\nimport axios from 'axios';\n\nimport serverPath from '../../api/path';\n\nconst Login = ({handleLoginSubmit}) => {\n\n    const history = useHistory();\n    const { register, errors, handleSubmit } = useForm();\n\n    const logIn = formData => {\n        axios.post(`${serverPath}/services/auth/login`, {\n            login: formData.logLogin,\n            password: formData.logPassword,\n          })\n          .then(res => {\n            handleLoginSubmit({\n                user: res.data,\n                isLogged: true,\n            });\n          })\n          .catch((error)=>{\n            handleLoginSubmit({\n                user: {},\n                isLogged: false,\n            })\n            window.alert(\"Cannot access the server!\");\n            console.log(error);\n          });\n    }\n\n    const onSubmit = formData => {\n        logIn(formData);\n    }\n\n    return (\n        <div className=\"Login\">\n            <div>\n                <h3>Log in</h3>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <div>\n                        <input \n                            type=\"text\" \n                            className=\"loginInput\"\n                            name=\"logLogin\"\n                            placeholder=\"Enter login\"\n                            required\n                            ref={register({required: true})}\n                        />\n                    </div>\n                    <div>\n                        <input \n                            type=\"password\" \n                            className=\"loginInput\"\n                            name=\"logPassword\"\n                            placeholder=\"Enter password\"\n                            required\n                            minLength=\"6\"\n                            ref={register({required: true})}\n                        />\n                    </div>\n                    <button className=\"loginButton\" type=\"submit\">Log in</button>\n                    <p className=\"toSignupText\">Do not have an account?</p>\n                    <button className=\"signupButton\" onClick={()=>{history.push('/signup')}}>Sign up</button>\n                </form>\n            </div>\n        </div>\n    );;\n}\n\nexport default Login;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form'\nimport axios from 'axios';\n\nimport serverPath from '../../api/path';\n\nconst Signup = () => {\n\n    const history = useHistory();\n    const { register, errors, watch, handleSubmit } = useForm({mode:\"onChange\"});\n    const [validLogin, setValidLogin] = useState(true);\n\n    const errorMessage = errMessage => {\n        return <p className=\"validError\">{errMessage}</p>\n    }\n\n    const handleLogin = ({target}) => {\n        axios.post(`${serverPath}/services/auth/signup/checkLogin`, {\n            login: target.value,\n        })\n            .then(res => {\n                setValidLogin(res.data);\n            })\n            .catch(error => {\n                window.alert(\"Cannot access the server!\");\n                console.log(error);\n            });\n    }\n\n    const onSubmit = formData => {\n        if(validLogin){\n            const loginValue = document.getElementById('signLogin').value;\n            axios.post(`${serverPath}/services/auth/signup`, {\n                firstname: formData.firstname,\n                lastname: formData.lastname,\n                password: formData.password,\n                login: loginValue,\n                id_type: formData.idType,\n                id_number: formData.idNumber,\n                address: formData.address,\n                mobile_phone: formData.mobilePhone,\n                home_phone: formData.homePhone,\n                category: formData.category,\n              })\n              .then(res => {\n                window.alert(\"You are signed up successfully!\");\n                history.push('/login');\n              })\n              .catch(error => {\n                window.alert(\"Cannot access the server!\");\n                console.log(error);\n              });    \n        }\n        \n    }\n\n    return (\n        <div className=\"Signup\">\n            <h3>Sign up</h3>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <div>\n                    <input \n                        type=\"text\" \n                        className=\"signInput\" \n                        name=\"firstname\"\n                        placeholder=\"Firstname\"\n                        required\n                        ref={register({required: true})}\n                    />\n                </div>\n                {errors.firstname && errorMessage('Firstname is required!')}\n\n                <div>\n                    <input \n                        type=\"text\" \n                        className=\"signInput\"\n                        name=\"lastname\"\n                        placeholder=\"Lastname\"\n                        required\n                        ref={register({required: true})}\n                    />\n                    \n                </div>\n                {errors.lastname && errorMessage('Lastname is required!')}\n                <div>\n                    <input \n                        type=\"password\" \n                        className=\"signInput\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        ref={register({minLength: 6, validate: {\n                            letters: value => /[a-zA-Z]/.test(value),\n                            digits: value => /[0-9]/.test(value),\n                        }})}\n                    />\n                    \n                </div>\n                {errors.password && errors.password.type === \"letters\" && errorMessage('Password should contain at least 1 english letter!')}\n                {errors.password && errors.password.type === \"minLength\" && errorMessage('Password should contain at least 6 characters!')}\n                {errors.password && errors.password.type === \"digits\" && errorMessage('Password should contain at least 1 digit!')}\n                <div>\n                    <input \n                        type=\"password\" \n                        className=\"signInput\"\n                        name=\"repeatPassword\"\n                        placeholder=\"Re-type password\"\n                        ref={register({validate: {\n                            confirmPassword: value => value === watch('password'),\n                        }})}\n                    />\n                    \n                </div>\n                {errors.repeatPassword && errors.repeatPassword.type === \"confirmPassword\" && errorMessage('Passwords do not match!')}\n                <div>\n                    <input \n                        type=\"text\" \n                        className=\"signInput\"\n                        name=\"signLogin\"\n                        placeholder=\"Login\"\n                        required\n                        onChange={handleLogin}\n                    />\n                    \n                </div>\n                {!validLogin && errorMessage('This login is not available!')}\n                <div>\n                    <input \n                        type=\"text\"\n                        id=\"signLogin\"\n                        className=\"signInput\"\n                        name=\"address\"\n                        placeholder=\"Address\"\n                        required\n                        ref={register({required: true})}\n                    />\n                    \n                </div>\n                {errors.address && errorMessage('Address is required!')}\n                <div className=\"signIdType\">\n                    <label htmlFor=\"idType\" id=\"id_type\">ID type: </label>\n                    <select \n                        name=\"idType\"\n                        required\n                        ref={register({required: true})}\n                    >\n                        <option value=\"\"></option>\n                        <option value=\"us_passport\">US passport</option>\n                        <option value=\"driving_license\">Driving license</option>\n                    </select>\n                    \n                </div>\n                {errors.idType && errorMessage('Choose ID Type')}\n                <div>\n                    <input \n                        type=\"text\" \n                        className=\"signInput\"\n                        name=\"idNumber\"\n                        placeholder=\"ID number\"\n                        required\n                        ref={register({required: true})}\n                    />\n                    \n                </div>\n                {errors.idNumber && errorMessage('ID Number is required!')}\n                <div>\n                    <input \n                        type=\"tel\" \n                        className=\"signInput\"\n                        name=\"mobilePhone\"\n                        placeholder=\"Mobile phone\"\n                        required\n                        ref={register({required: true})}\n                    />\n                    \n                </div>\n                {errors.mobilePhone && errorMessage('Mobile phone is required!')}\n                <div>\n                    <input \n                        type=\"tel\" \n                        className=\"signInput\"\n                        name=\"homePhone\"\n                        placeholder=\"Home phone\"\n                        required\n                        ref={register({required: true})}\n                    />\n                    \n                </div>\n                {errors.homePhone && errorMessage('Home phone is required!')}\n                <div className=\"signCategory\">\n                    <label htmlFor=\"category\">Category: </label>\n                    <div id=\"category\">\n                        <input \n                            type=\"radio\" \n                            id=\"cat_none\"\n                            value=\"\"\n                            ref={register}\n                            name=\"category\"\n                        />\n                        <label htmlFor=\"cat_none\">None</label>\n                        <input \n                            type=\"radio\" \n                            id=\"cat_military\"\n                            value=\"military\"\n                            ref={register}\n                            name=\"category\"\n                        />\n                        <label htmlFor=\"cat_military\">Military</label>\n                        <input \n                            type=\"radio\"\n                            id=\"cat_vip\"\n                            value=\"vip\"\n                            ref={register}\n                            name=\"category\"\n                        />\n                        <label htmlFor=\"cat_vip\">Vip</label>\n                    </div>\n                </div>\n                <div>\n                    <button type=\"submit\" className=\"signupButton\">Submit</button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default Signup;","import React from 'react';\n\nconst Profile = () => {\n\n    return (\n        <div className=\"Profile\">\n            <h3>This is Profile page!</h3>\n        </div>\n    );\n}\n\nexport default Profile;","import React from 'react';\n\nconst Booking = () => {\n\n    return (\n        <div className=\"Booking\">\n            <h3>This is Booking page!</h3>\n        </div>\n    );\n}\n\nexport default Booking;","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport axios from 'axios';\nimport Home from './routes/Home/Home';\nimport Login from './routes/Auth/Login';\nimport Signup from './routes/Auth/Signup';\nimport serverPath from './api/path';\nimport Navigation from './components/Navigation/Navigation';\nimport Profile from './routes/Profile/Profile';\nimport Booking from './routes/Booking/Booking';\n\nimport './App.css';\n\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      isLogged: false,\n      user: {\n        type: \"user\",\n      },\n    }\n  }\n\n  handleLoginSubmit = (data) => {\n    this.setState(data);\n  }\n\n  logOut = () => {\n    this.setState({\n      user: {},\n      isLogged: false,\n    });\n  }\n\n  render(){\n    return (\n      <Router basename=\"/backend_war_exploded\">\n        <div className=\"App\">\n          <Navigation state={this.state} logOut={this.logOut}/>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home state={this.state} login={this.login} logOut={this.logout}/>\n            </Route>\n            <Route exact path=\"/booking\">\n              <Booking />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route exact path=\"/login\">\n              <Login handleLoginSubmit={this.handleLoginSubmit}/>\n            </Route>\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n          </Switch>\n\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}